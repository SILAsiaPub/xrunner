[variables]
title=Unit Tests

seedpath1=D:\All-SIL-Publishing\_xrunner-projects\Var-testing
seedpath2=D:\All-SIL-Publishing\_xrunner-projects
ptestpath1=%seedpath1%
ptestpath2=%seedpath2%
etestpath1=!seedpath1!
etestpath2=!seedpath2!
ptestfile1=%seedpath1%\project.txt
ptestfile2=%seedpath2%\project.txt
etestfile1=!seedpath1!\project.txt
etestfile2=!seedpath2!\project.txt
expectpath1=D:\All-SIL-Publishing\_xrunner-projects\Var-testing
expectpath2=D:\All-SIL-Publishing\_xrunner-projects
expectfile1=D:\All-SIL-Publishing\_xrunner-projects\Var-testing\project.txt
expectfile2=D:\All-SIL-Publishing\_xrunner-projects\project.txt
tz50=:var vname vvalue
tz51=echo vname vvalue
tcount=0
infolevel=0
unittest=on
[a]
button=Run all tests
t=:unittest
xt=:start xrun "%projectpath%\project.txt" "" 0 pause unittest

[b]
button=check :checkdir    
ut=:checkdir "%expectpath1%" "%ptestfile1%" "%% x 2 var in project.txt"
ut=:checkdir "%expectpath1%" "!ptestfile1!" "%% + ^^! var in project.txt"
ut=:checkdir "%expectpath1%" "%etestfile1%" "^^! exclamation + %% var in project.txt"
ut=:checkdir "%expectpath1%" "!etestfile1!" "exclamation x 2 var in project.txt"
ut=:checkdir "%expectpath1%" "%ptestpath1%" "%% x 2 var in project.txt"
ut=:checkdir "%expectpath1%" "!etestpath1!" "exclamation x 2 var in project.txt"

[c]
button=check :var
ut=:var "val, %expectfile1%" val "%ptestfile1%" "%% x 2 var in project.txt"   
ut=:var "val, %expectfile1%" val "!ptestfile1!" "%% + exc var in project.txt" 
ut=:var "val, %expectpath1%" val "%etestpath1%" "exc + %% var in project.txt"         
ut=:var "val, %expectpath1%" val "!etestpath1!" "exc x 2 var in project.txt"



[d]
button=check :command2var
ut=:command2var "where, javapath, C:\Program Files\Java\jdk1.8.0_101\bin\java.exe" "where java" javapath "Java test"
ut=:command2var "where, javapath, C:\Windows\System32\xcopy.exe" "where xcopy" javapath "Java test"
ut=:command2var "dir, diroutput, xcopy.exe" "dir /b C:\Windows\System32\xcopy.*" diroutput "dir test"
ut=:command2var "echo, hello, hello world" "echo hello world" hello "echo test"


[e]
button=check :v2
ut=:v2 "%expectfile1%" val "%ptestfile1%" "%% x 2 var in project.txt"   
ut=:v2 "%expectfile1%" val "!ptestfile1!" "%% + exclamation var in project.txt" 
ut=:v2 "%expectpath1%" val "%etestpath1%" "%% x 2 var in project.txt"         
ut=:v2 "%expectpath1%" val "!etestpath1!" "exclamation x 2 var in project.txt"


[f]
button= check :setinfolevel
ut=:setinfolevel "0, , , , , , {---,        ----}" 0 " nothing yet"
ut=:setinfolevel "1, on, , , , , {---,        ----}" 1 " nothing yet"
ut=:setinfolevel "2, on, on, , , , {---,        ----}" 2 " nothing yet"
ut=:setinfolevel "3, on, on, on, , , {---,        ----}" 3 " nothing yet"
ut=:setinfolevel "4, on, on, on, on, , {---,        ----}" 4 " nothing yet"
ut=:setinfolevel "5, on, on, on, on, on, {---,        ----}" 5 " nothing yet"


[g]
button=check :drivepath
ut=:drivepath "%expectpath1%" "%ptestfile1%" "%% x 2 var in project.txt"


[h]
button=Checking :main :taskgroup 
ut=:main "-,h,th" "h" "single group"
ut=:main "-,th" "" "all groups"
ut=:taskgroup "th" "th" "core test this one would return up to the maximum number of tasks but that is not needed here"

[i]
button=test :outfile
ut=:outfile "%expectfile1%" "%ptestfile1%" "%ptestfile2%" "%% x 2 var in project.txt"
ut=:outfile "%expectfile2%" "" "%ptestfile2%" "%% x 2 no var1 in project.txt"
ut=:outfile "%expectfile1%" "!ptestfile1!" "!ptestfile2!" "%% + ^^! var in project.txt"
ut=:outfile "%expectfile2%" "" "!ptestfile2!" "%% + ^^^! exclamation var in project.txt"
ut=:outfile "%expectfile1%" "%etestfile1%" "%etestfile2%" "^^! exclamation + %% var in project.txt"
ut=:outfile "%expectfile2%" "" "%etestfile2%" "^^! exclamation + %% var in project.txt"
ut=:outfile "%expectfile1%" "!etestfile1!" "!etestfile2!" "exclamation x 2 var in project.txt"
ut=:outfile "%expectfile2%" "" "!etestfile2!" "exclamation x 2 var in project.txt"

[j]
button=Checking :funcend  for info levels 0, 1, 3
ut=:funcend ":xslt, , , , color 06" :xslt "checking logic, no outfile and infolevel 0"
utt=:var info1 on
ut=:funcend ":xslt, on, , , color 06" ":xslt" " checkin logic, no outfile and infolevel 1"
utt=:var info3 on
ut=:funcend ":xslt, on, on, , color 06,        ----} :xslt" :xslt " checkin logic, no outfile and infolevel 3"
utt=:var info1
utt=:var info3 
utt=:var outfile "C:\programs\xrunner\scripts\variable2xslt-2.xslt"
ut=:funcend ":xslt, , " :xslt "checking logic, with outfile and infolevel 0"
utt=:var info1 on
ut=:funcend ":xslt, on, , Created: C:\programs\xrunner\scripts\variable2xslt-2.xslt" ":xslt" " checkin logic, with outfile and infolevel 1"
utt=:var  info3 on
ut=:funcend ":xslt, on, on, Created: C:\programs\xrunner\scripts\variable2xslt-2.xslt, ,        ----} :xslt" :xslt " checkin logic, with outfile and infolevel 3"


